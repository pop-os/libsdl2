From: Sam Lantinga <slouken@libsdl.org>
Date: Thu, 6 Jan 2022 12:56:07 -0800
Subject: Only return from SDL_PollEvent() if the last sentinel is consumed

Origin: upstream, 2.0.20, commit:8ff2166855067feaac81512be5d32c73841b6533
Bug: https://github.com/libsdl-org/SDL/issues/5136
Bug-Debian: https://bugs.debian.org/1001809
---
 src/events/SDL_events.c | 7 ++++++-
 1 file changed, 6 insertions(+), 1 deletion(-)

diff --git a/src/events/SDL_events.c b/src/events/SDL_events.c
index 23b5a52..42f5104 100644
--- a/src/events/SDL_events.c
+++ b/src/events/SDL_events.c
@@ -983,6 +983,7 @@ SDL_WaitEventTimeout(SDL_Event * event, int timeout)
     }
 
     /* First check for existing events */
+retry:
     switch (SDL_PeepEventsInternal(event, 1, SDL_GETEVENT, SDL_FIRSTEVENT, SDL_LASTEVENT, include_sentinel)) {
     case -1:
         return 0;
@@ -994,7 +995,11 @@ SDL_WaitEventTimeout(SDL_Event * event, int timeout)
         break;
     default:
         if (event && event->type == SDL_POLLSENTINEL) {
-            /* Reached the end of a poll cycle, and no timeout */
+            /* Reached the end of a poll cycle, and not willing to wait */
+            if (SDL_AtomicGet(&SDL_sentinel_pending) > 0) {
+                /* We have another sentinel pending, skip this and keep going */
+                goto retry;
+            }
             return 0;
         }
         /* Has existing events */
