From: Sam Lantinga <slouken@libsdl.org>
Date: Thu, 6 Jan 2022 13:58:39 -0800
Subject: Move special sentinel handling inside SDL_PeepEvents()

Origin: upstream, 2.0.20, commit:954858846d2883864b4e5fef55f31bb92f1514cc
Bug: https://github.com/libsdl-org/SDL/issues/5136
Bug-Debian: https://bugs.debian.org/1001809
---
 src/events/SDL_events.c | 14 +++++++-------
 1 file changed, 7 insertions(+), 7 deletions(-)

diff --git a/src/events/SDL_events.c b/src/events/SDL_events.c
index f02031f..5ded85c 100644
--- a/src/events/SDL_events.c
+++ b/src/events/SDL_events.c
@@ -720,9 +720,14 @@ SDL_PeepEventsInternal(SDL_Event * events, int numevents, SDL_eventaction action
                             SDL_CutEvent(entry);
                         }
                     }
-                    if (type != SDL_POLLSENTINEL || include_sentinel) {
-                        ++used;
+                    if (type == SDL_POLLSENTINEL) {
+                        /* Special handling for the sentinel event */
+                        if (!include_sentinel || SDL_AtomicGet(&SDL_sentinel_pending) > 0) {
+                            /* Skip it, we don't want to include it or there's another one pending */
+                            continue;
+                        }
                     }
+                    ++used;
                 }
             }
         }
@@ -982,7 +987,6 @@ SDL_WaitEventTimeout(SDL_Event * event, int timeout)
     }
 
     /* First check for existing events */
-retry:
     switch (SDL_PeepEventsInternal(event, 1, SDL_GETEVENT, SDL_FIRSTEVENT, SDL_LASTEVENT, include_sentinel)) {
     case -1:
         return 0;
@@ -995,10 +999,6 @@ retry:
     default:
         if (event && event->type == SDL_POLLSENTINEL) {
             /* Reached the end of a poll cycle, and not willing to wait */
-            if (SDL_AtomicGet(&SDL_sentinel_pending) > 0) {
-                /* We have another sentinel pending, skip this and keep going */
-                goto retry;
-            }
             return 0;
         }
         /* Has existing events */
